#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 187)
  # This code will be put as-is in the Parser class.
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code) # Tokenize the code using our lexer
    puts @tokens.inspect if show_tokens
    do_parse # Kickoff the parsing process
  end
  
  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    28,    15,    29,    26,    27,    15,    17,    18,    19,    20,
    21,    22,    80,    96,    23,    25,    15,    45,    46,    24,
    85,    45,    46,    32,    53,    43,    44,    32,    41,    42,
    80,    82,    87,    16,    98,    14,    28,    16,    29,    26,
    27,    15,    17,    18,    19,    20,    21,    22,    16,    79,
    23,    25,    45,    46,    91,    24,    45,    46,    32,    52,
    43,    44,    32,    41,    42,    37,    38,    39,    40,    35,
    36,    14,    28,    16,    29,    26,    27,    51,    17,    18,
    19,    20,    21,    22,    56,    58,    23,    25,    97,    89,
    28,    24,    29,    26,    27,    30,    17,    18,    19,    20,
    21,    22,    80,   100,    23,    25,    80,    14,    28,    24,
    29,    26,    27,   nil,    17,    18,    19,    20,    21,    22,
   nil,   nil,    23,    25,   nil,    14,    28,    24,    29,    26,
    27,   nil,    17,    18,    19,    20,    21,    22,   nil,   nil,
    23,    25,   nil,    14,    28,    24,    29,    26,    27,   nil,
    17,    18,    19,    20,    21,    22,   nil,   nil,    23,    25,
   nil,    14,    28,    24,    29,    26,    27,   nil,    17,    18,
    19,    20,    21,    22,   nil,   nil,    23,    25,   nil,    14,
    28,    24,    29,    26,    27,   nil,    17,    18,    19,    20,
    21,    22,   nil,   nil,    23,    25,   nil,    14,    28,    24,
    29,    26,    27,   nil,    17,    18,    19,    20,    21,    22,
   nil,   nil,    23,    25,   nil,    14,    28,    24,    29,    26,
    27,   nil,    17,    18,    19,    20,    21,    22,   nil,   nil,
    23,    25,   nil,    14,    28,    24,    29,    26,    27,   nil,
    17,    18,    19,    20,    21,    22,   nil,   nil,    23,    25,
   nil,    14,    28,    24,    29,    26,    27,   nil,    17,    18,
    19,    20,    21,    22,   nil,   nil,    23,    25,   nil,    14,
    28,    24,    29,    26,    27,   nil,    17,    18,    19,    20,
    21,    22,   nil,   nil,    23,    25,   nil,    14,    28,    24,
    29,    26,    27,   nil,    17,    18,    19,    20,    21,    22,
   nil,   nil,    23,    25,   nil,    14,    28,    24,    29,    26,
    27,   nil,    17,    18,    19,    20,    21,    22,   nil,   nil,
    23,    25,   nil,    14,    28,    24,    29,    26,    27,   nil,
    17,    18,    19,    20,    21,    22,   nil,   nil,    23,    25,
   nil,    14,    28,    24,    29,    26,    27,   nil,    17,    18,
    19,    20,    21,    22,   nil,   nil,    23,    25,   nil,    14,
    28,    24,    29,    26,    27,   nil,    17,    18,    19,    20,
    21,    22,   nil,   nil,    23,    25,   nil,    14,    28,    24,
    29,    26,    27,   nil,    17,    18,    19,    20,    21,    22,
   nil,   nil,    23,    25,   nil,    14,    28,    24,    29,    26,
    27,   nil,    17,    18,    19,    20,    21,    22,   nil,   nil,
    23,    25,   nil,    14,    28,    24,    29,    26,    27,   nil,
    17,    18,    19,    20,    21,    22,   nil,   nil,    23,    25,
   nil,    14,    28,    24,    29,    26,    27,   nil,    17,    18,
    19,    20,    21,    22,   nil,   nil,    23,    25,   nil,    14,
    28,    24,    29,    26,    27,   nil,    17,    18,    19,    20,
    21,    22,   nil,   nil,    23,    25,   nil,    14,    28,    24,
    29,    26,    27,   nil,    17,    18,    19,    20,    21,    22,
   nil,   nil,    23,    25,   nil,    14,    28,    24,    29,    26,
    27,   nil,    17,    18,    19,    20,    21,    22,    45,    46,
    23,    25,   nil,    14,    32,    24,    43,    44,   nil,    41,
    42,    37,    38,    39,    40,    35,    36,    34,    33,    45,
    46,    14,    73,    45,    46,    32,   nil,    43,    44,    32,
    41,    42,    37,    38,    39,    40,    35,    36,    34,    33,
    45,    46,    87,    49,    86,    48,    32,   nil,    43,    44,
   nil,    41,    42,    37,    38,    39,    40,    35,    36,    34,
    33,    45,    46,    95,   nil,    94,   nil,    32,   nil,    43,
    44,   nil,    41,    42,    37,    38,    39,    40,    35,    36,
    34,    33,    45,    46,   nil,   nil,   nil,   nil,    32,   nil,
    43,    44,   nil,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,    45,    46,   nil,   nil,   nil,   nil,    32,
   nil,    43,    44,   nil,    41,    42,    37,    38,    39,    40,
    35,    36,    34,    33,    45,    46,   nil,   nil,   nil,   nil,
    32,   nil,    43,    44,   nil,    41,    42,    37,    38,    39,
    40,    35,    36,    34,    33,    45,    46,   nil,   nil,   nil,
   nil,    32,   nil,    43,    44,   nil,    41,    42,    37,    38,
    39,    40,    35,    36,    34,    33,    45,    46,   nil,   nil,
    80,   nil,    32,   nil,    43,    44,   nil,    41,    42,    37,
    38,    39,    40,    35,    36,    34,    33,    45,    46,   nil,
   nil,    80,   nil,    32,   nil,    43,    44,   nil,    41,    42,
    37,    38,    39,    40,    35,    36,    34,    33,    45,    46,
   nil,   nil,   nil,   nil,    32,   nil,    43,    44,   nil,    41,
    42,    37,    38,    39,    40,    35,    36,    34,    33,    45,
    46,   nil,   nil,   nil,   nil,    32,   nil,    43,    44,   nil,
    41,    42,    37,    38,    39,    40,    35,    36,    34,    45,
    46,   nil,   nil,   nil,   nil,    32,   nil,    43,    44,   nil,
    41,    42,    37,    38,    39,    40,    45,    46,   nil,   nil,
   nil,   nil,    32,   nil,    43,    44,   nil,    41,    42,    37,
    38,    39,    40,    45,    46,   nil,   nil,   nil,   nil,    32,
   nil,    43,    44,   nil,    41,    42,    45,    46,   nil,   nil,
   nil,   nil,    32,   nil,    43,    44,   nil,    41,    42,    45,
    46,   nil,   nil,   nil,   nil,    32,   nil,    43,    44,   nil,
    41,    42,    45,    46,   nil,   nil,    45,    46,    32,   nil,
    43,    44,    32,   nil,    43,    44 ]

racc_action_check = [
     0,    90,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    53,    90,     0,     0,     2,    63,    63,     0,
    58,    50,    50,    63,    27,    63,    63,    50,    63,    63,
    52,    53,    92,    90,    92,     0,    80,     0,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,     2,    52,
    80,    80,    60,    60,    82,    80,    69,    69,    60,    26,
    60,    60,    69,    60,    60,    60,    60,    60,    60,    60,
    60,    80,    45,    80,    45,    45,    45,    25,    45,    45,
    45,    45,    45,    45,    30,    32,    45,    45,    91,    79,
    48,    45,    48,    48,    48,     1,    48,    48,    48,    48,
    48,    48,    94,    95,    48,    48,    97,    45,    14,    48,
    14,    14,    14,   nil,    14,    14,    14,    14,    14,    14,
   nil,   nil,    14,    14,   nil,    48,    46,    14,    46,    46,
    46,   nil,    46,    46,    46,    46,    46,    46,   nil,   nil,
    46,    46,   nil,    14,    24,    46,    24,    24,    24,   nil,
    24,    24,    24,    24,    24,    24,   nil,   nil,    24,    24,
   nil,    46,    87,    24,    87,    87,    87,   nil,    87,    87,
    87,    87,    87,    87,   nil,   nil,    87,    87,   nil,    24,
    85,    87,    85,    85,    85,   nil,    85,    85,    85,    85,
    85,    85,   nil,   nil,    85,    85,   nil,    87,    51,    85,
    51,    51,    51,   nil,    51,    51,    51,    51,    51,    51,
   nil,   nil,    51,    51,   nil,    85,    28,    51,    28,    28,
    28,   nil,    28,    28,    28,    28,    28,    28,   nil,   nil,
    28,    28,   nil,    51,    29,    28,    29,    29,    29,   nil,
    29,    29,    29,    29,    29,    29,   nil,   nil,    29,    29,
   nil,    28,    49,    29,    49,    49,    49,   nil,    49,    49,
    49,    49,    49,    49,   nil,   nil,    49,    49,   nil,    29,
    31,    49,    31,    31,    31,   nil,    31,    31,    31,    31,
    31,    31,   nil,   nil,    31,    31,   nil,    49,    44,    31,
    44,    44,    44,   nil,    44,    44,    44,    44,    44,    44,
   nil,   nil,    44,    44,   nil,    31,    33,    44,    33,    33,
    33,   nil,    33,    33,    33,    33,    33,    33,   nil,   nil,
    33,    33,   nil,    44,    34,    33,    34,    34,    34,   nil,
    34,    34,    34,    34,    34,    34,   nil,   nil,    34,    34,
   nil,    33,    35,    34,    35,    35,    35,   nil,    35,    35,
    35,    35,    35,    35,   nil,   nil,    35,    35,   nil,    34,
    36,    35,    36,    36,    36,   nil,    36,    36,    36,    36,
    36,    36,   nil,   nil,    36,    36,   nil,    35,    43,    36,
    43,    43,    43,   nil,    43,    43,    43,    43,    43,    43,
   nil,   nil,    43,    43,   nil,    36,    38,    43,    38,    38,
    38,   nil,    38,    38,    38,    38,    38,    38,   nil,   nil,
    38,    38,   nil,    43,    39,    38,    39,    39,    39,   nil,
    39,    39,    39,    39,    39,    39,   nil,   nil,    39,    39,
   nil,    38,    40,    39,    40,    40,    40,   nil,    40,    40,
    40,    40,    40,    40,   nil,   nil,    40,    40,   nil,    39,
    41,    40,    41,    41,    41,   nil,    41,    41,    41,    41,
    41,    41,   nil,   nil,    41,    41,   nil,    40,    42,    41,
    42,    42,    42,   nil,    42,    42,    42,    42,    42,    42,
   nil,   nil,    42,    42,   nil,    41,    37,    42,    37,    37,
    37,   nil,    37,    37,    37,    37,    37,    37,    47,    47,
    37,    37,   nil,    42,    47,    37,    47,    47,   nil,    47,
    47,    47,    47,    47,    47,    47,    47,    47,    47,    75,
    75,    37,    47,    70,    70,    75,   nil,    75,    75,    70,
    75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
     3,     3,    74,    23,    74,    23,     3,   nil,     3,     3,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,    77,    77,    88,   nil,    88,   nil,    77,   nil,    77,
    77,   nil,    77,    77,    77,    77,    77,    77,    77,    77,
    77,    77,    76,    76,   nil,   nil,   nil,   nil,    76,   nil,
    76,    76,   nil,    76,    76,    76,    76,    76,    76,    76,
    76,    76,    76,    93,    93,   nil,   nil,   nil,   nil,    93,
   nil,    93,    93,   nil,    93,    93,    93,    93,    93,    93,
    93,    93,    93,    93,    72,    72,   nil,   nil,   nil,   nil,
    72,   nil,    72,    72,   nil,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    57,    57,   nil,   nil,   nil,
   nil,    57,   nil,    57,    57,   nil,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    54,    54,   nil,   nil,
    54,   nil,    54,   nil,    54,    54,   nil,    54,    54,    54,
    54,    54,    54,    54,    54,    54,    54,    55,    55,   nil,
   nil,    55,   nil,    55,   nil,    55,    55,   nil,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    71,    71,
   nil,   nil,   nil,   nil,    71,   nil,    71,    71,   nil,    71,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    59,
    59,   nil,   nil,   nil,   nil,    59,   nil,    59,    59,   nil,
    59,    59,    59,    59,    59,    59,    59,    59,    59,    61,
    61,   nil,   nil,   nil,   nil,    61,   nil,    61,    61,   nil,
    61,    61,    61,    61,    61,    61,    62,    62,   nil,   nil,
   nil,   nil,    62,   nil,    62,    62,   nil,    62,    62,    62,
    62,    62,    62,    65,    65,   nil,   nil,   nil,   nil,    65,
   nil,    65,    65,   nil,    65,    65,    66,    66,   nil,   nil,
   nil,   nil,    66,   nil,    66,    66,   nil,    66,    66,    64,
    64,   nil,   nil,   nil,   nil,    64,   nil,    64,    64,   nil,
    64,    64,    68,    68,   nil,   nil,    67,    67,    68,   nil,
    68,    68,    67,   nil,    67,    67 ]

racc_action_pointer = [
    -2,    95,     9,   526,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   106,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   508,   142,    42,    43,     7,   214,   232,
    84,   268,    69,   304,   322,   340,   358,   484,   394,   412,
   430,   448,   466,   376,   286,    70,   124,   484,    88,   250,
     7,   196,    12,    -6,   652,   673,   nil,   631,   -17,   715,
    38,   735,   752,     3,   795,   769,   782,   812,   808,    42,
   509,   694,   610,   nil,   506,   505,   568,   547,   nil,    73,
    34,   nil,    37,   nil,   nil,   178,   nil,   160,   527,   nil,
    -6,    50,    -4,   589,    84,    87,   nil,    88,   nil,   nil,
   nil,   nil ]

racc_action_default = [
    -1,   -60,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -60,   -17,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -60,   -47,   -60,   -60,   -60,   -60,
   -60,    -5,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -29,   -60,
   -46,   -60,   -60,   -60,   -60,   -60,   102,    -4,   -27,   -32,
   -33,   -34,   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,
   -43,   -44,   -45,   -16,   -60,   -30,   -48,   -49,   -50,   -52,
   -60,   -55,   -60,   -57,   -58,   -29,   -26,   -60,   -60,   -53,
   -60,   -60,   -60,   -31,   -60,   -60,   -59,   -60,   -28,   -51,
   -54,   -56 ]

racc_goto_table = [
    31,     2,    47,    78,    81,    83,    84,    74,     1,    88,
   nil,   nil,    50,   nil,   nil,   nil,    54,    55,   nil,    57,
   nil,    59,    60,    61,    62,    63,    64,    65,    66,    67,
    68,    69,    70,    71,    72,   nil,    75,    76,   nil,    77,
   nil,   nil,   nil,   nil,    92,    99,   nil,   nil,   101,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    75,   nil,    93,   nil,   nil,   nil,   nil,
   nil,    90,   nil,   nil,   nil,   nil,   nil,   nil,    31 ]

racc_goto_check = [
     4,     2,     3,    15,    15,    15,    15,    14,     1,    16,
   nil,   nil,     3,   nil,   nil,   nil,     3,     3,   nil,     3,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,   nil,     3,     3,   nil,     3,
   nil,   nil,   nil,   nil,    14,    15,   nil,   nil,    15,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,     3,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     8,     1,   -12,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -41,   -49,   -70 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 41, :_reduce_1,
  1, 41, :_reduce_2,
  1, 42, :_reduce_3,
  3, 42, :_reduce_4,
  2, 42, :_reduce_5,
  1, 42, :_reduce_6,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  3, 43, :_reduce_16,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 45, :_reduce_19,
  1, 45, :_reduce_20,
  1, 45, :_reduce_21,
  1, 45, :_reduce_22,
  1, 45, :_reduce_23,
  1, 45, :_reduce_24,
  1, 46, :_reduce_25,
  4, 46, :_reduce_26,
  3, 46, :_reduce_27,
  6, 46, :_reduce_28,
  0, 54, :_reduce_29,
  1, 54, :_reduce_30,
  3, 54, :_reduce_31,
  3, 47, :_reduce_32,
  3, 47, :_reduce_33,
  3, 47, :_reduce_34,
  3, 47, :_reduce_35,
  3, 47, :_reduce_36,
  3, 47, :_reduce_37,
  3, 47, :_reduce_38,
  3, 47, :_reduce_39,
  3, 47, :_reduce_40,
  3, 47, :_reduce_41,
  3, 47, :_reduce_42,
  3, 47, :_reduce_43,
  3, 47, :_reduce_44,
  3, 47, :_reduce_45,
  2, 47, :_reduce_46,
  1, 48, :_reduce_47,
  3, 49, :_reduce_48,
  3, 49, :_reduce_49,
  3, 50, :_reduce_50,
  6, 50, :_reduce_51,
  0, 56, :_reduce_52,
  1, 56, :_reduce_53,
  3, 56, :_reduce_54,
  3, 51, :_reduce_55,
  6, 51, :_reduce_56,
  3, 52, :_reduce_57,
  3, 53, :_reduce_58,
  3, 55, :_reduce_59 ]

racc_reduce_n = 60

racc_shift_n = 102

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :DEF => 5,
  :CLASS => 6,
  :NEWLINE => 7,
  :NUMBER => 8,
  :STRING => 9,
  :ARRAY => 10,
  :TRUE => 11,
  :FALSE => 12,
  :NIL => 13,
  :AND => 14,
  :OR => 15,
  :IDENTIFIER => 16,
  :CONSTANT => 17,
  :INDENT => 18,
  :DEDENT => 19,
  "." => 20,
  "!" => 21,
  "*" => 22,
  "/" => 23,
  "%" => 24,
  "+" => 25,
  "-" => 26,
  ">" => 27,
  ">=" => 28,
  "<" => 29,
  "<=" => 30,
  "==" => 31,
  "!=" => 32,
  "&&" => 33,
  "||" => 34,
  "=" => 35,
  "," => 36,
  "(" => 37,
  ")" => 38,
  ";" => 39 }

racc_nt_base = 40

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "ARRAY",
  "TRUE",
  "FALSE",
  "NIL",
  "AND",
  "OR",
  "IDENTIFIER",
  "CONSTANT",
  "INDENT",
  "DEDENT",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "Constant",
  "Assign",
  "Def",
  "Class",
  "If",
  "While",
  "ArgList",
  "Block",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 56)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'grammar.y', 71)
  def _reduce_16(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_19(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_20(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 84)
  def _reduce_21(val, _values, result)
     result = ArrayNode.new(val)     
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 85)
  def _reduce_22(val, _values, result)
     result = TrueNode.new           
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_23(val, _values, result)
     result = FalseNode.new          
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_24(val, _values, result)
     result = NilNode.new            
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_25(val, _values, result)
     result = CallNode.new(nil, val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_26(val, _values, result)
     result = CallNode.new(nil, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_29(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_30(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_31(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 113)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_45(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_46(val, _values, result)
     result = CallNode.new(val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 131)
  def _reduce_47(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 136)
  def _reduce_48(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 137)
  def _reduce_49(val, _values, result)
     result = SetConstantNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 142)
  def _reduce_50(val, _values, result)
     result = DefNode.new(val[1], [], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_51(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_52(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_53(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_54(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_55(val, _values, result)
     result = ClassNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_56(val, _values, result)
     result = ClassNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_57(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 166)
  def _reduce_58(val, _values, result)
     result = WhileNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_59(val, _values, result)
     result = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
